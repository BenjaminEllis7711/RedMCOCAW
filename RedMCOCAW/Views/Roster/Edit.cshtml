@model RedMCOCAW.Models.Roster.RosterEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <div class="col-md-6">
            
        </div>
   
    </div>
    <div class="form-horizontal">
        <h4>Add Node Assignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group d-none">
            @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.ChampionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChampionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChampionId, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!Model.IsAssigned)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.NodeAssignmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NodeAssignmentId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NodeAssignmentId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save Node Assignment" class="btn btn-dark" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.NodeAssignmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NodeAssignmentId, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.NodeAssignmentId, "", new { @class = "text-danger" })                    
                </div>
                    <input type="reset" value="Update Node Assignment" class="btn btn-dark" />
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-dark" />
                </div>
            </div>

        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
